<?php

/**
 * BaseIStoreBrand
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property string $url
 * @property Doctrine_Collection $IStoreItem
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method string              getUrl()         Returns the current record's "url" value
 * @method Doctrine_Collection getIStoreItem()  Returns the current record's "IStoreItem" collection
 * @method IStoreBrand         setName()        Sets the current record's "name" value
 * @method IStoreBrand         setDescription() Sets the current record's "description" value
 * @method IStoreBrand         setUrl()         Sets the current record's "url" value
 * @method IStoreBrand         setIStoreItem()  Sets the current record's "IStoreItem" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIStoreBrand extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('i_store_brand');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('IStoreItem', array(
             'local' => 'id',
             'foreign' => 'brand_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}