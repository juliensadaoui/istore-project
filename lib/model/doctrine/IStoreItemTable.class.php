<?php

/**
 * IStoreItemTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class IStoreItemTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object IStoreItemTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('IStoreItem');
    }

    /**
     *  Recupere le premier article valide du catalogue.
     *
     * @param Doctrine_Query $q
     * @return <type>
     */
    public function retrieveActiveItem(Doctrine_Query $q)
    {
        return $this->addActiveItemsQuery($q)->fetchOne();
    }

  /**
   *   Retourne les articles valides du catalogue.
   *    La requete peut être ajusté en fonction du besoin.
   *
   * @param Doctrine_Query $q
   * @return <type>
   */
    public function getActiveItems(Doctrine_Query $q = null)
    {
        return $this->addActiveItemsQuery($q)->execute();
    }

  /**
   *   Retourne le nombre d'articles valides dans le catalogue.
   *    La requête peut etre ajusté en fonction du besoin
   *
   * @param Doctrine_Query $q
   * @return <type>
   */
    public function countActiveItems(Doctrine_Query $q = null)
    {
        return $this->addActiveItemsQuery($q)->count();
    }

    /**
     *  Retourne la requete doctrine permettant de récupérer
     *      les articles valides du catalogue. La requete peut
     *      être ajusté en fonction du besoin. Exemple: retourner
     *      les articles valides associés à une catégorie donnée.
     *
     * @param Doctrine_Query $q
     * @return <type>
     */
    public function addActiveItemsQuery(Doctrine_Query $q = null)
    {
        if (is_null($q))
        {
          $q = Doctrine_Query::create()
            ->from('IStoreItem i');
        }

        $alias = $q->getRootAlias();

        $q->andWhere($alias . '.is_activated = ?', true);
//          ->addOrderBy($alias . '.name');

        return $q;
    }

    public function getUpdatedItems ($limit = 10)
    {
        return $this->addUpdatedItemsQuery()->limit($limit)->execute();
    }

    /**
     *  Retourne la requete doctrine permettant de récupérer
     *      les deniers articles mise à jour. La requete peut
     *      être ajusté en fonction du besoin.
     *
     * @param Doctrine_Query $q
     * @return <type>
     */
    public function addUpdatedItemsQuery (Doctrine_Query $q = null)
    {
        if (is_null($q))
        {
            $q = Doctrine_Query::create()
                ->from('IStoreItem i');
        }

        $alias = $q->getRootAlias();


        $q->addOrderBy($alias . '.updated_at DESC');

        return $q;
    }

    public function getNewsItems ($limit = 10)
    {
        return $this->addNewsItemsQuery()->limit($limit)->execute();
    }

    /**
     *  Retourne la requete doctrine permettant de récupérer
     *      les denières nouveautés du catalogue. La requete peut
     *      être ajusté en fonction du besoin.
     *
     * @param Doctrine_Query $q
     * @return <type>
     */
    public function addNewsItemsQuery (Doctrine_Query $q = null)
    {
        if (is_null($q))
        {
            $q = Doctrine_Query::create()
                ->from('IStoreItem i');
        }

        $alias = $q->getRootAlias();
        $q->andWhere($alias . '.is_activated = ?', true);
        $q->addOrderBy($alias . '.created_at DESC');

        return $q;
    }
}