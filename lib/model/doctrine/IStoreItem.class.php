<?php

/**
 * IStoreItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    i-store
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class IStoreItem extends BaseIStoreItem
{
    /**
     *  Remplace les caractères non ASCII du nom de l'article
     *      par le caractère -
     *
     * @return <type>
     */
    public function getNameSlug()
    {
      return IStore::slugify($this->getName());
    }

    /**
     *  Remplace les caractères non ASCII de la marque de l'article
     *      par le caractère -
     *
     * @return <type>
     */
    public function getBrandSlug()
    {
      return IStore::slugify($this->getIStoreBrand());
    }

    /**
     *  Remplace les caractères non ASCII de la description courte
     *       de l'article par le caractère -
     *
     * @return <type>
     */
    public function getDescriptionSlug()
    {
      return IStore::slugify($this->getShortDescription());
    }

    /**
     *   Retourne un tableau formaté des caractéristiques d'un article
     *
     * @param string $detailsXml   Détails de l'article dans le format XML
     * @return array()   Détail de l'article (ensemble des caractéristiques dans
     *      un tableau formaté
     */
    public static function formatDetails($detailsXml)
    {
        // initialisation
        $details = array();
        $keepTrying = true;
        $i = 1;
        $detailsXml = '<?xml version="1.0" encoding="ISO-8859-1"?>' . html_entity_decode($detailsXml);

        // on charge les librairies de Zend Framework
        ProjectConfiguration::registerZend();
        
        // on format les details de l'article
        do
        {
            try {
                // on recupere une à une les caractéristiques de l'article
                $caract = new Zend_Config_Xml($detailsXml, 'caract_' . $i);
                $details[] = $caract->toArray();
                $i++;
            } catch (Zend_Config_Exception $e) {
                $keepTrying = false;
            }
        } while ($keepTrying);
        
        return $details;
    }
}
