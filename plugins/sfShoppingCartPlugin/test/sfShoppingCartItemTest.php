<?php

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../lib/sfShoppingCartItem.class.php';

/**
 * Test class for sfShoppingCartItem.
 * Generated by PHPUnit on 2010-10-31 at 20:07:00.
 */
class sfShoppingCartItemTest extends PHPUnit_Framework_TestCase {

    /**
     * @var sfShoppingCartItem
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new sfShoppingCartItem();
        $this->object->setId(1);
        $this->object->setPrice(14.4);
        $this->object->setQuantity(8);
        $this->object->setWeight(14.5);
        $this->object->setClass('IStoreShoppingCartItem');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * Test la méthode qui retourne l'identifiant unique d'un article du panier
     */
    public function testGetId() {
        $value = $this->object->getId();
        $this->assertEquals($value, 1);
    }

    /**
     * Test la méthode qui retourne l'identifiant unique d'un article du panier
     */
    public function testSetId() {
        $this->object->setId(2);
        $value = $this->object->getId();
        $this->assertEquals($value, 2);
    }

    /**
     * Test de la méthode qui retourne la class correspondant à l'article du panier
     */
    public function testGetClass() {
        $value = $this->object->getClass();
        $this->assertEquals($value, 'IStoreShoppingCartItem');
    }

    /**
     * Test la méthode qui modifie la class de l'article
     */
    public function testSetClass() {
        $this->object->setClass('IStore');
        $value = $this->object->getClass();
        $this->assertEquals($value, 'IStore');
    }

    /**
     * Test de la méthode qui retourne la quantite à commander d'un article
     */
    public function testGetQuantity() {
        $value = $this->object->getQuantity();
        $this->assertEquals($value, 8);
    }

    /**
     * Test de la méthode qui modifie la quantité d'article du panier
     */
    public function testSetQuantity() {
        $this->object->setQuantity(5);
        $value = $this->object->getQuantity();
        $this->assertEquals($value, 5);
    }

    /**
     * Test la méthode qui retourne le prix d'un article du panier
     */
    public function testGetPrice() {
        $value = $this->object->getPrice();
        $this->assertEquals($value, 14.4);
    }

    /**
     * Test de la méthode qui modifie le prix d'un article
     */
    public function testSetPrice() {
        $this->object->setPrice(17.8);
        $value = $this->object->getPrice();
        $this->assertEquals($value, 17.8);
    }

    /**
     * Test de la méthode qui retourne le poids d'un article
     */
    public function testGetWeight() {
        $value = $this->object->getWeight();
        $this->assertEquals($value ,14.5);
    }

    /**
     * Test de la méthode qui modifie le poids d'un article
     */
    public function testSetWeight() {
        $this->object->setWeight(20.5);
        $value = $this->object->getWeight();
        $this->assertEquals($value, 20.5);
    }
}

?>
